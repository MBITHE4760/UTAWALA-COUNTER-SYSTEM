
counter_sensor_final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800200  000004de  00000572  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004de  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000220  00800234  00800234  000005a6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000618  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012d5  00000000  00000000  000006a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cf3  00000000  00000000  0000197d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000634  00000000  00000000  00002670  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d4  00000000  00000000  00002ca4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000893  00000000  00000000  00002e78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000036c  00000000  00000000  0000370b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00003a77  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	92 c1       	rjmp	.+804    	; 0x32a <__vector_1>
   6:	00 00       	nop
   8:	a7 c1       	rjmp	.+846    	; 0x358 <__vector_2>
   a:	00 00       	nop
   c:	bc c1       	rjmp	.+888    	; 0x386 <__vector_3>
   e:	00 00       	nop
  10:	cd c1       	rjmp	.+922    	; 0x3ac <__vector_4>
  12:	00 00       	nop
  14:	0d c2       	rjmp	.+1050   	; 0x430 <__vector_5>
  16:	00 00       	nop
  18:	1e c2       	rjmp	.+1084   	; 0x456 <__vector_6>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	14 c1       	rjmp	.+552    	; 0x28e <__vector_25>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	01 c1       	rjmp	.+514    	; 0x2dc <__vector_54>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee ed       	ldi	r30, 0xDE	; 222
  fc:	f4 e0       	ldi	r31, 0x04	; 4
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 33       	cpi	r26, 0x34	; 52
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	24 e0       	ldi	r18, 0x04	; 4
 110:	a4 e3       	ldi	r26, 0x34	; 52
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a4 35       	cpi	r26, 0x54	; 84
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	58 d0       	rcall	.+176    	; 0x1d0 <main>
 120:	dc c1       	rjmp	.+952    	; 0x4da <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <_Z14UART0_TRANSMITPc>:
	int i;
	for (i=0;i<256;i++)
	{
		buffer3[position3]=0x00;
	}
	position3=0;
 124:	fc 01       	movw	r30, r24
 126:	80 81       	ld	r24, Z
 128:	88 23       	and	r24, r24
 12a:	41 f0       	breq	.+16     	; 0x13c <_Z14UART0_TRANSMITPc+0x18>
 12c:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 130:	95 ff       	sbrs	r25, 5
 132:	fc cf       	rjmp	.-8      	; 0x12c <_Z14UART0_TRANSMITPc+0x8>
 134:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 138:	31 96       	adiw	r30, 0x01	; 1
 13a:	f5 cf       	rjmp	.-22     	; 0x126 <_Z14UART0_TRANSMITPc+0x2>
 13c:	08 95       	ret

0000013e <_Z11UART0_BEGINv>:
 13e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
 142:	87 e6       	ldi	r24, 0x67	; 103
 144:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
 148:	e1 ec       	ldi	r30, 0xC1	; 193
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	80 81       	ld	r24, Z
 14e:	88 69       	ori	r24, 0x98	; 152
 150:	80 83       	st	Z, r24
 152:	e2 ec       	ldi	r30, 0xC2	; 194
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	80 81       	ld	r24, Z
 158:	86 60       	ori	r24, 0x06	; 6
 15a:	80 83       	st	Z, r24
 15c:	08 95       	ret

0000015e <_Z11UART3_BEGINv>:
 15e:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <__TEXT_REGION_LENGTH__+0x7c0135>
 162:	87 e6       	ldi	r24, 0x67	; 103
 164:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__TEXT_REGION_LENGTH__+0x7c0134>
 168:	e1 e3       	ldi	r30, 0x31	; 49
 16a:	f1 e0       	ldi	r31, 0x01	; 1
 16c:	80 81       	ld	r24, Z
 16e:	88 69       	ori	r24, 0x98	; 152
 170:	80 83       	st	Z, r24
 172:	e2 e3       	ldi	r30, 0x32	; 50
 174:	f1 e0       	ldi	r31, 0x01	; 1
 176:	80 81       	ld	r24, Z
 178:	86 60       	ori	r24, 0x06	; 6
 17a:	80 83       	st	Z, r24
 17c:	08 95       	ret

0000017e <_Z17enable_interruptsv>:
}

void enable_interrupts()
{
	//IR-ladies entrance
	EIMSK|=(1<<INT0);//external interrupt request 0 enable
 17e:	8d b3       	in	r24, 0x1d	; 29
 180:	81 60       	ori	r24, 0x01	; 1
 182:	8d bb       	out	0x1d, r24	; 29
	EICRA|=(1<<ISC01)|(0<<ISC00);//trigger INTO 0n falling edge. Interrupt 0 sense control
 184:	e9 e6       	ldi	r30, 0x69	; 105
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	80 81       	ld	r24, Z
 18a:	82 60       	ori	r24, 0x02	; 2
 18c:	80 83       	st	Z, r24

// 	IR-gents entrance
	EIMSK|=(1<<INT1);//external interrupt request 0 enable
 18e:	8d b3       	in	r24, 0x1d	; 29
 190:	82 60       	ori	r24, 0x02	; 2
 192:	8d bb       	out	0x1d, r24	; 29
	EICRA|=(1<<ISC11)|(0<<ISC10);//trigger INTO 0n falling edge. Interrupt 0 sense control
 194:	80 81       	ld	r24, Z
 196:	88 60       	ori	r24, 0x08	; 8
 198:	80 83       	st	Z, r24
// 
// 	//Magnetic reed switch-gents bathroom door
	EIMSK|=(1<<INT2);//external interrupt request 0 enable
 19a:	8d b3       	in	r24, 0x1d	; 29
 19c:	84 60       	ori	r24, 0x04	; 4
 19e:	8d bb       	out	0x1d, r24	; 29
	EICRA|=(1<<ISC21)|(1<<ISC20);//trigger INTO 0n rising edge. Interrupt 0 sense control
 1a0:	80 81       	ld	r24, Z
 1a2:	80 63       	ori	r24, 0x30	; 48
 1a4:	80 83       	st	Z, r24
// 
// 	//water flow sensor-gents shower
	EIMSK|=(1<<INT3);//external interrupt request 0 enable
 1a6:	8d b3       	in	r24, 0x1d	; 29
 1a8:	88 60       	ori	r24, 0x08	; 8
 1aa:	8d bb       	out	0x1d, r24	; 29
	EICRA|=(1<<ISC31)|(1<<ISC30);//trigger INTO 0n rising edge. Interrupt 0 sense control
 1ac:	80 81       	ld	r24, Z
 1ae:	80 6c       	ori	r24, 0xC0	; 192
 1b0:	80 83       	st	Z, r24
// 
// 	//Magnetic reed switch-ladies bathroom door
	EIMSK|=(1<<INT4);//external interrupt request 0 enable
 1b2:	8d b3       	in	r24, 0x1d	; 29
 1b4:	80 61       	ori	r24, 0x10	; 16
 1b6:	8d bb       	out	0x1d, r24	; 29
	EICRB|=(1<<ISC41)|(1<<ISC40);//trigger INTO 0n rising edge. Interrupt 0 sense control
 1b8:	ea e6       	ldi	r30, 0x6A	; 106
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	80 81       	ld	r24, Z
 1be:	83 60       	ori	r24, 0x03	; 3
 1c0:	80 83       	st	Z, r24
// 
// 	//water flow sensor-ladies shower
	EIMSK|=(1<<INT5);//external interrupt request 0 enable
 1c2:	8d b3       	in	r24, 0x1d	; 29
 1c4:	80 62       	ori	r24, 0x20	; 32
 1c6:	8d bb       	out	0x1d, r24	; 29
	EICRB|=(1<<ISC51)|(1<<ISC50);//trigger INTO 0n rising edge. Interrupt 0 sense control
 1c8:	80 81       	ld	r24, Z
 1ca:	8c 60       	ori	r24, 0x0C	; 12
 1cc:	80 83       	st	Z, r24
 1ce:	08 95       	ret

000001d0 <main>:

}

int main(void)
{
	UART0_BEGIN();
 1d0:	b6 df       	rcall	.-148    	; 0x13e <_Z11UART0_BEGINv>
	UART0_TRANSMIT("something -1\n");
 1d2:	80 e0       	ldi	r24, 0x00	; 0
 1d4:	92 e0       	ldi	r25, 0x02	; 2
	UART3_BEGIN();
 1d6:	a6 df       	rcall	.-180    	; 0x124 <_Z14UART0_TRANSMITPc>
 1d8:	c2 df       	rcall	.-124    	; 0x15e <_Z11UART3_BEGINv>
	enable_interrupts();
 1da:	d1 df       	rcall	.-94     	; 0x17e <_Z17enable_interruptsv>
	UART0_TRANSMIT("something 0\n");
 1dc:	8e e0       	ldi	r24, 0x0E	; 14
 1de:	92 e0       	ldi	r25, 0x02	; 2
 1e0:	a1 df       	rcall	.-190    	; 0x124 <_Z14UART0_TRANSMITPc>
	sei();
 1e2:	78 94       	sei
	UART0_TRANSMIT("something 1\n");
 1e4:	8b e1       	ldi	r24, 0x1B	; 27
 1e6:	92 e0       	ldi	r25, 0x02	; 2
 1e8:	9d df       	rcall	.-198    	; 0x124 <_Z14UART0_TRANSMITPc>
 1ea:	10 92 4b 02 	sts	0x024B, r1	; 0x80024b <i+0x1>
	while (1)
	{
		/*_delay_us(1);*/
		for(i=0; i<1; i++)
 1ee:	10 92 4a 02 	sts	0x024A, r1	; 0x80024a <i>
 1f2:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <i>
 1f6:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <i+0x1>
 1fa:	18 16       	cp	r1, r24
 1fc:	19 06       	cpc	r1, r25
 1fe:	9c f0       	brlt	.+38     	; 0x226 <main+0x56>
 200:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 202:	83 ed       	ldi	r24, 0xD3	; 211
 204:	90 e3       	ldi	r25, 0x30	; 48
 206:	21 50       	subi	r18, 0x01	; 1
 208:	80 40       	sbci	r24, 0x00	; 0
 20a:	90 40       	sbci	r25, 0x00	; 0
 20c:	e1 f7       	brne	.-8      	; 0x206 <main+0x36>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <main+0x40>
 210:	00 00       	nop
 212:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <i>
 216:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <i+0x1>
 21a:	01 96       	adiw	r24, 0x01	; 1
 21c:	90 93 4b 02 	sts	0x024B, r25	; 0x80024b <i+0x1>
 220:	80 93 4a 02 	sts	0x024A, r24	; 0x80024a <i>
 224:	e6 cf       	rjmp	.-52     	; 0x1f2 <main+0x22>
 		{//1 minute delay
 			_delay_ms(1000);
 		}
UART0_TRANSMIT("something\n");
 226:	88 e2       	ldi	r24, 0x28	; 40
 228:	92 e0       	ldi	r25, 0x02	; 2
 22a:	7c df       	rcall	.-264    	; 0x124 <_Z14UART0_TRANSMITPc>
 22c:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <ladies_total_count>
		num_ladies=ladies_total_count;
 230:	90 91 4f 02 	lds	r25, 0x024F	; 0x80024f <ladies_total_count+0x1>
 234:	90 93 49 02 	sts	0x0249, r25	; 0x800249 <num_ladies+0x1>
 238:	80 93 48 02 	sts	0x0248, r24	; 0x800248 <num_ladies>
 23c:	10 92 4f 02 	sts	0x024F, r1	; 0x80024f <ladies_total_count+0x1>
		ladies_total_count=0;
 240:	10 92 4e 02 	sts	0x024E, r1	; 0x80024e <ladies_total_count>
 244:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <gents_total_count>
		num_gents=gents_total_count;
 248:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <gents_total_count+0x1>
 24c:	90 93 47 02 	sts	0x0247, r25	; 0x800247 <num_gents+0x1>
 250:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <num_gents>
 254:	10 92 4d 02 	sts	0x024D, r1	; 0x80024d <gents_total_count+0x1>
		gents_total_count=0;
 258:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <gents_total_count>
 25c:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <gentsbafu_count>
		num_gentsbafu=gentsbafu_count;
 260:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <gentsbafu_count+0x1>
 264:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <num_gentsbafu+0x1>
 268:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <num_gentsbafu>
 26c:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <gentsbafu_count+0x1>
		gentsbafu_count=0;
 270:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <gentsbafu_count>
 274:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <ladiesbafu_count>
		num_ladiesbafu=ladiesbafu_count;
 278:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <ladiesbafu_count+0x1>
 27c:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <__data_end+0x1>
 280:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <__data_end>
 284:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <ladiesbafu_count+0x1>
		ladiesbafu_count=0;
 288:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <ladiesbafu_count>
 28c:	ae cf       	rjmp	.-164    	; 0x1ea <main+0x1a>

0000028e <__vector_25>:
 28e:	1f 92       	push	r1
		}

	}
}
ISR(USART0_RX_vect)
{
 290:	0f 92       	push	r0
 292:	0f b6       	in	r0, 0x3f	; 63
 294:	0f 92       	push	r0
 296:	11 24       	eor	r1, r1
 298:	0b b6       	in	r0, 0x3b	; 59
 29a:	0f 92       	push	r0
 29c:	2f 93       	push	r18
 29e:	8f 93       	push	r24
 2a0:	9f 93       	push	r25
 2a2:	ef 93       	push	r30
 2a4:	ff 93       	push	r31
	
	buffer0[position0]=UDR0;
 2a6:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <position0>
 2aa:	90 91 53 02 	lds	r25, 0x0253	; 0x800253 <position0+0x1>
 2ae:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 2b2:	fc 01       	movw	r30, r24
 2b4:	ec 5a       	subi	r30, 0xAC	; 172
 2b6:	fc 4f       	sbci	r31, 0xFC	; 252
 2b8:	20 83       	st	Z, r18
	position0++;
 2ba:	01 96       	adiw	r24, 0x01	; 1
 2bc:	90 93 53 02 	sts	0x0253, r25	; 0x800253 <position0+0x1>
 2c0:	80 93 52 02 	sts	0x0252, r24	; 0x800252 <position0>
}
 2c4:	ff 91       	pop	r31
 2c6:	ef 91       	pop	r30
 2c8:	9f 91       	pop	r25
 2ca:	8f 91       	pop	r24
 2cc:	2f 91       	pop	r18
 2ce:	0f 90       	pop	r0
 2d0:	0b be       	out	0x3b, r0	; 59
 2d2:	0f 90       	pop	r0
 2d4:	0f be       	out	0x3f, r0	; 63
 2d6:	0f 90       	pop	r0
 2d8:	1f 90       	pop	r1
 2da:	18 95       	reti

000002dc <__vector_54>:

ISR(USART3_RX_vect)
{
 2dc:	1f 92       	push	r1
 2de:	0f 92       	push	r0
 2e0:	0f b6       	in	r0, 0x3f	; 63
 2e2:	0f 92       	push	r0
 2e4:	11 24       	eor	r1, r1
 2e6:	0b b6       	in	r0, 0x3b	; 59
 2e8:	0f 92       	push	r0
 2ea:	2f 93       	push	r18
 2ec:	8f 93       	push	r24
 2ee:	9f 93       	push	r25
 2f0:	ef 93       	push	r30
 2f2:	ff 93       	push	r31
	
	buffer3[position3]=UDR3;
 2f4:	80 91 50 02 	lds	r24, 0x0250	; 0x800250 <position3>
 2f8:	90 91 51 02 	lds	r25, 0x0251	; 0x800251 <position3+0x1>
 2fc:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x7c0136>
 300:	fc 01       	movw	r30, r24
 302:	ec 5a       	subi	r30, 0xAC	; 172
 304:	fd 4f       	sbci	r31, 0xFD	; 253
 306:	20 83       	st	Z, r18
	position3++;
 308:	01 96       	adiw	r24, 0x01	; 1
 30a:	90 93 51 02 	sts	0x0251, r25	; 0x800251 <position3+0x1>
 30e:	80 93 50 02 	sts	0x0250, r24	; 0x800250 <position3>
}
 312:	ff 91       	pop	r31
 314:	ef 91       	pop	r30
 316:	9f 91       	pop	r25
 318:	8f 91       	pop	r24
 31a:	2f 91       	pop	r18
 31c:	0f 90       	pop	r0
 31e:	0b be       	out	0x3b, r0	; 59
 320:	0f 90       	pop	r0
 322:	0f be       	out	0x3f, r0	; 63
 324:	0f 90       	pop	r0
 326:	1f 90       	pop	r1
 328:	18 95       	reti

0000032a <__vector_1>:

ISR(INT0_vect)
{//ladies entrance
 32a:	1f 92       	push	r1
 32c:	0f 92       	push	r0
 32e:	0f b6       	in	r0, 0x3f	; 63
 330:	0f 92       	push	r0
 332:	11 24       	eor	r1, r1
 334:	8f 93       	push	r24
 336:	9f 93       	push	r25
	ladies_total_count++;
 338:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <ladies_total_count>
 33c:	90 91 4f 02 	lds	r25, 0x024F	; 0x80024f <ladies_total_count+0x1>
 340:	01 96       	adiw	r24, 0x01	; 1
 342:	90 93 4f 02 	sts	0x024F, r25	; 0x80024f <ladies_total_count+0x1>
 346:	80 93 4e 02 	sts	0x024E, r24	; 0x80024e <ladies_total_count>
}
 34a:	9f 91       	pop	r25
 34c:	8f 91       	pop	r24
 34e:	0f 90       	pop	r0
 350:	0f be       	out	0x3f, r0	; 63
 352:	0f 90       	pop	r0
 354:	1f 90       	pop	r1
 356:	18 95       	reti

00000358 <__vector_2>:
ISR(INT1_vect)
{//gents entrance
 358:	1f 92       	push	r1
 35a:	0f 92       	push	r0
 35c:	0f b6       	in	r0, 0x3f	; 63
 35e:	0f 92       	push	r0
 360:	11 24       	eor	r1, r1
 362:	8f 93       	push	r24
 364:	9f 93       	push	r25
	gents_total_count++;
 366:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <gents_total_count>
 36a:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <gents_total_count+0x1>
 36e:	01 96       	adiw	r24, 0x01	; 1
 370:	90 93 4d 02 	sts	0x024D, r25	; 0x80024d <gents_total_count+0x1>
 374:	80 93 4c 02 	sts	0x024C, r24	; 0x80024c <gents_total_count>
}
 378:	9f 91       	pop	r25
 37a:	8f 91       	pop	r24
 37c:	0f 90       	pop	r0
 37e:	0f be       	out	0x3f, r0	; 63
 380:	0f 90       	pop	r0
 382:	1f 90       	pop	r1
 384:	18 95       	reti

00000386 <__vector_3>:
ISR(INT2_vect)
{//gents bathroom door
 386:	1f 92       	push	r1
 388:	0f 92       	push	r0
 38a:	0f b6       	in	r0, 0x3f	; 63
 38c:	0f 92       	push	r0
 38e:	11 24       	eor	r1, r1
 390:	8f 93       	push	r24
	gentsbafu_closed=true;
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	80 93 45 02 	sts	0x0245, r24	; 0x800245 <gentsbafu_closed>
	gents_bath_flag=0;
 398:	10 92 43 02 	sts	0x0243, r1	; 0x800243 <gents_bath_flag+0x1>
 39c:	10 92 42 02 	sts	0x0242, r1	; 0x800242 <gents_bath_flag>
}
 3a0:	8f 91       	pop	r24
 3a2:	0f 90       	pop	r0
 3a4:	0f be       	out	0x3f, r0	; 63
 3a6:	0f 90       	pop	r0
 3a8:	1f 90       	pop	r1
 3aa:	18 95       	reti

000003ac <__vector_4>:
ISR(INT3_vect)
{//gents shower-water flow sensor
 3ac:	1f 92       	push	r1
 3ae:	0f 92       	push	r0
 3b0:	0f b6       	in	r0, 0x3f	; 63
 3b2:	0f 92       	push	r0
 3b4:	11 24       	eor	r1, r1
 3b6:	2f 93       	push	r18
 3b8:	3f 93       	push	r19
 3ba:	8f 93       	push	r24
 3bc:	9f 93       	push	r25
	pulsecount_gents++;
 3be:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <pulsecount_gents>
 3c2:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <pulsecount_gents+0x1>
 3c6:	01 96       	adiw	r24, 0x01	; 1
 3c8:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <pulsecount_gents+0x1>
 3cc:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <pulsecount_gents>
	if ((pulsecount_gents>100) && (gentsbafu_closed == true) && (gents_bath_flag == 0))
 3d0:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <pulsecount_gents>
 3d4:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <pulsecount_gents+0x1>
 3d8:	85 36       	cpi	r24, 0x65	; 101
 3da:	91 05       	cpc	r25, r1
 3dc:	64 f0       	brlt	.+24     	; 0x3f6 <__vector_4+0x4a>
 3de:	80 91 45 02 	lds	r24, 0x0245	; 0x800245 <gentsbafu_closed>
 3e2:	88 23       	and	r24, r24
 3e4:	51 f0       	breq	.+20     	; 0x3fa <__vector_4+0x4e>
 3e6:	20 91 42 02 	lds	r18, 0x0242	; 0x800242 <gents_bath_flag>
 3ea:	30 91 43 02 	lds	r19, 0x0243	; 0x800243 <gents_bath_flag+0x1>
 3ee:	23 2b       	or	r18, r19
 3f0:	29 f0       	breq	.+10     	; 0x3fc <__vector_4+0x50>
 3f2:	80 e0       	ldi	r24, 0x00	; 0
 3f4:	03 c0       	rjmp	.+6      	; 0x3fc <__vector_4+0x50>
 3f6:	80 e0       	ldi	r24, 0x00	; 0
 3f8:	01 c0       	rjmp	.+2      	; 0x3fc <__vector_4+0x50>
 3fa:	80 e0       	ldi	r24, 0x00	; 0
 3fc:	88 23       	and	r24, r24
 3fe:	79 f0       	breq	.+30     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
	{
		gents_bath_flag=1;
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	90 93 43 02 	sts	0x0243, r25	; 0x800243 <gents_bath_flag+0x1>
 408:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <gents_bath_flag>
		gentsbafu_count++;
 40c:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <gentsbafu_count>
 410:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <gentsbafu_count+0x1>
 414:	01 96       	adiw	r24, 0x01	; 1
 416:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <gentsbafu_count+0x1>
 41a:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <gentsbafu_count>
	}
}
 41e:	9f 91       	pop	r25
 420:	8f 91       	pop	r24
 422:	3f 91       	pop	r19
 424:	2f 91       	pop	r18
 426:	0f 90       	pop	r0
 428:	0f be       	out	0x3f, r0	; 63
 42a:	0f 90       	pop	r0
 42c:	1f 90       	pop	r1
 42e:	18 95       	reti

00000430 <__vector_5>:
ISR(INT4_vect)
{//ladies bathroom door
 430:	1f 92       	push	r1
 432:	0f 92       	push	r0
 434:	0f b6       	in	r0, 0x3f	; 63
 436:	0f 92       	push	r0
 438:	11 24       	eor	r1, r1
 43a:	8f 93       	push	r24
	ladiesbafu_closed=true;
 43c:	81 e0       	ldi	r24, 0x01	; 1
 43e:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <ladiesbafu_closed>
	ladies_bath_flag=0;
 442:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <ladies_bath_flag+0x1>
 446:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <ladies_bath_flag>
}
 44a:	8f 91       	pop	r24
 44c:	0f 90       	pop	r0
 44e:	0f be       	out	0x3f, r0	; 63
 450:	0f 90       	pop	r0
 452:	1f 90       	pop	r1
 454:	18 95       	reti

00000456 <__vector_6>:
ISR(INT5_vect)
{//ladies shower-water flow sensor
 456:	1f 92       	push	r1
 458:	0f 92       	push	r0
 45a:	0f b6       	in	r0, 0x3f	; 63
 45c:	0f 92       	push	r0
 45e:	11 24       	eor	r1, r1
 460:	2f 93       	push	r18
 462:	3f 93       	push	r19
 464:	8f 93       	push	r24
 466:	9f 93       	push	r25
	pulsecount_ladies++;
 468:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <pulsecount_ladies>
 46c:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <pulsecount_ladies+0x1>
 470:	01 96       	adiw	r24, 0x01	; 1
 472:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <pulsecount_ladies+0x1>
 476:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <pulsecount_ladies>
	if ((pulsecount_ladies>100) && (ladiesbafu_closed == true) && (ladies_bath_flag == 0))
 47a:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <pulsecount_ladies>
 47e:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <pulsecount_ladies+0x1>
 482:	85 36       	cpi	r24, 0x65	; 101
 484:	91 05       	cpc	r25, r1
 486:	64 f0       	brlt	.+24     	; 0x4a0 <__vector_6+0x4a>
 488:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <ladiesbafu_closed>
 48c:	88 23       	and	r24, r24
 48e:	51 f0       	breq	.+20     	; 0x4a4 <__vector_6+0x4e>
 490:	20 91 40 02 	lds	r18, 0x0240	; 0x800240 <ladies_bath_flag>
 494:	30 91 41 02 	lds	r19, 0x0241	; 0x800241 <ladies_bath_flag+0x1>
 498:	23 2b       	or	r18, r19
 49a:	29 f0       	breq	.+10     	; 0x4a6 <__vector_6+0x50>
 49c:	80 e0       	ldi	r24, 0x00	; 0
 49e:	03 c0       	rjmp	.+6      	; 0x4a6 <__vector_6+0x50>
 4a0:	80 e0       	ldi	r24, 0x00	; 0
 4a2:	01 c0       	rjmp	.+2      	; 0x4a6 <__vector_6+0x50>
 4a4:	80 e0       	ldi	r24, 0x00	; 0
 4a6:	88 23       	and	r24, r24
 4a8:	79 f0       	breq	.+30     	; 0x4c8 <__vector_6+0x72>
	{
		ladies_bath_flag=1;
 4aa:	81 e0       	ldi	r24, 0x01	; 1
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <ladies_bath_flag+0x1>
 4b2:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <ladies_bath_flag>
		ladiesbafu_count++;
 4b6:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <ladiesbafu_count>
 4ba:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <ladiesbafu_count+0x1>
 4be:	01 96       	adiw	r24, 0x01	; 1
 4c0:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <ladiesbafu_count+0x1>
 4c4:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <ladiesbafu_count>
	}
}
 4c8:	9f 91       	pop	r25
 4ca:	8f 91       	pop	r24
 4cc:	3f 91       	pop	r19
 4ce:	2f 91       	pop	r18
 4d0:	0f 90       	pop	r0
 4d2:	0f be       	out	0x3f, r0	; 63
 4d4:	0f 90       	pop	r0
 4d6:	1f 90       	pop	r1
 4d8:	18 95       	reti

000004da <_exit>:
 4da:	f8 94       	cli

000004dc <__stop_program>:
 4dc:	ff cf       	rjmp	.-2      	; 0x4dc <__stop_program>
