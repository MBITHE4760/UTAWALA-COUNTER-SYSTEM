
timers_reed.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800200  0000031e  000003b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000031e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000010c  00800204  00800204  000003b6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003b6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000428  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f76  00000000  00000000  00000488  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cc6  00000000  00000000  000013fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000429  00000000  00000000  000020c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000114  00000000  00000000  000024f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000723  00000000  00000000  00002604  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001fb  00000000  00000000  00002d27  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00002f22  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	ff c0       	rjmp	.+510    	; 0x214 <__vector_5>
  16:	00 00       	nop
  18:	17 c1       	rjmp	.+558    	; 0x248 <__vector_6>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	20 c1       	rjmp	.+576    	; 0x286 <__vector_17>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	b0 c0       	rjmp	.+352    	; 0x1c6 <__vector_25>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee e1       	ldi	r30, 0x1E	; 30
  fc:	f3 e0       	ldi	r31, 0x03	; 3
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 30       	cpi	r26, 0x04	; 4
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	a4 e0       	ldi	r26, 0x04	; 4
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a0 31       	cpi	r26, 0x10	; 16
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	2e d0       	rcall	.+92     	; 0x17c <main>
 120:	fc c0       	rjmp	.+504    	; 0x31a <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <_Z14UART0_TRANSMITPc>:
	//TCNT1=0;
	OCR1AL=62500;//62500*256=16MHz //output compare register low
	OCR1AH=62500>>8; // output compare register high
	TCCR1B|=(1<<WGM12); //CTC-clear timer on compare match 
	TIMSK1|=(1<<OCIE1A);//timer 1 interrupt mask enable
	TCCR1B|=(1<<CS12); //timer counter control register //prescaler of 256
 124:	fc 01       	movw	r30, r24
 126:	80 81       	ld	r24, Z
 128:	88 23       	and	r24, r24
 12a:	41 f0       	breq	.+16     	; 0x13c <_Z14UART0_TRANSMITPc+0x18>
 12c:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 130:	95 ff       	sbrs	r25, 5
 132:	fc cf       	rjmp	.-8      	; 0x12c <_Z14UART0_TRANSMITPc+0x8>
 134:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 138:	31 96       	adiw	r30, 0x01	; 1
 13a:	f5 cf       	rjmp	.-22     	; 0x126 <_Z14UART0_TRANSMITPc+0x2>
 13c:	08 95       	ret

0000013e <_Z11UART0_BEGINv>:
 13e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
 142:	87 e6       	ldi	r24, 0x67	; 103
 144:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
 148:	e1 ec       	ldi	r30, 0xC1	; 193
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	80 81       	ld	r24, Z
 14e:	88 69       	ori	r24, 0x98	; 152
 150:	80 83       	st	Z, r24
 152:	e2 ec       	ldi	r30, 0xC2	; 194
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	80 81       	ld	r24, Z
 158:	86 60       	ori	r24, 0x06	; 6
 15a:	80 83       	st	Z, r24
 15c:	08 95       	ret

0000015e <_Z17enable_interruptsv>:
 15e:	8d b3       	in	r24, 0x1d	; 29
 160:	80 61       	ori	r24, 0x10	; 16
 162:	8d bb       	out	0x1d, r24	; 29
 164:	ea e6       	ldi	r30, 0x6A	; 106
 166:	f0 e0       	ldi	r31, 0x00	; 0
 168:	80 81       	ld	r24, Z
 16a:	81 60       	ori	r24, 0x01	; 1
 16c:	80 83       	st	Z, r24
 16e:	8d b3       	in	r24, 0x1d	; 29
 170:	80 62       	ori	r24, 0x20	; 32
 172:	8d bb       	out	0x1d, r24	; 29
 174:	80 81       	ld	r24, Z
 176:	8c 60       	ori	r24, 0x0C	; 12
 178:	80 83       	st	Z, r24
 17a:	08 95       	ret

0000017c <main>:
}
int main(void)
{
 17c:	cf 93       	push	r28
 17e:	df 93       	push	r29
 180:	cd b7       	in	r28, 0x3d	; 61
 182:	de b7       	in	r29, 0x3e	; 62
 184:	2a 97       	sbiw	r28, 0x0a	; 10
 186:	0f b6       	in	r0, 0x3f	; 63
 188:	f8 94       	cli
 18a:	de bf       	out	0x3e, r29	; 62
 18c:	0f be       	out	0x3f, r0	; 63
 18e:	cd bf       	out	0x3d, r28	; 61
	UART0_BEGIN();
 190:	d6 df       	rcall	.-84     	; 0x13e <_Z11UART0_BEGINv>
	enable_interrupts();
 192:	e5 df       	rcall	.-54     	; 0x15e <_Z17enable_interruptsv>
 194:	78 94       	sei
	//start_timer();
	sei();
 196:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <ladiesbafu_count>
	{
// 		for(i=0; i<15; i++)
// 		{
// 			_delay_ms(1000);
// 		}
		num_ladiesbafu=ladiesbafu_count;
 19a:	90 91 0a 02 	lds	r25, 0x020A	; 0x80020a <ladiesbafu_count+0x1>
 19e:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <num_ladiesbafu+0x1>
 1a2:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <num_ladiesbafu>
 1a6:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <ladiesbafu_count+0x1>
		ladiesbafu_count=0;
 1aa:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <ladiesbafu_count>
 1ae:	4a e0       	ldi	r20, 0x0A	; 10
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 1b0:	be 01       	movw	r22, r28
 1b2:	6f 5f       	subi	r22, 0xFF	; 255
 1b4:	7f 4f       	sbci	r23, 0xFF	; 255
 1b6:	7e d0       	rcall	.+252    	; 0x2b4 <__itoa_ncheck>
 1b8:	ce 01       	movw	r24, r28
		
		char ch3[10];
		itoa(num_ladiesbafu,ch3,10);
		
		UART0_TRANSMIT(ch3);
 1ba:	01 96       	adiw	r24, 0x01	; 1
 1bc:	b3 df       	rcall	.-154    	; 0x124 <_Z14UART0_TRANSMITPc>
 1be:	80 e0       	ldi	r24, 0x00	; 0
		UART0_TRANSMIT("\r\n");
 1c0:	92 e0       	ldi	r25, 0x02	; 2
 1c2:	b0 df       	rcall	.-160    	; 0x124 <_Z14UART0_TRANSMITPc>
 1c4:	e8 cf       	rjmp	.-48     	; 0x196 <main+0x1a>

000001c6 <__vector_25>:
 1c6:	1f 92       	push	r1
{
	UART0_BEGIN();
	enable_interrupts();
	//start_timer();
	sei();
	while (1)
 1c8:	0f 92       	push	r0
		UART0_TRANSMIT(ch3);
		UART0_TRANSMIT("\r\n");
	}
}
ISR(USART0_RX_vect)
{
 1ca:	0f b6       	in	r0, 0x3f	; 63
 1cc:	0f 92       	push	r0
 1ce:	11 24       	eor	r1, r1
 1d0:	0b b6       	in	r0, 0x3b	; 59
 1d2:	0f 92       	push	r0
 1d4:	2f 93       	push	r18
 1d6:	8f 93       	push	r24
 1d8:	9f 93       	push	r25
 1da:	ef 93       	push	r30
 1dc:	ff 93       	push	r31
	
	buffer0[position0]=UDR0;
 1de:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <position0>
 1e2:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <position0+0x1>
 1e6:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 1ea:	fc 01       	movw	r30, r24
 1ec:	e0 5f       	subi	r30, 0xF0	; 240
 1ee:	fd 4f       	sbci	r31, 0xFD	; 253
 1f0:	20 83       	st	Z, r18
	position0++;
 1f2:	01 96       	adiw	r24, 0x01	; 1
 1f4:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <position0+0x1>
 1f8:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <position0>
}
 1fc:	ff 91       	pop	r31
 1fe:	ef 91       	pop	r30
 200:	9f 91       	pop	r25
 202:	8f 91       	pop	r24
 204:	2f 91       	pop	r18
 206:	0f 90       	pop	r0
 208:	0b be       	out	0x3b, r0	; 59
 20a:	0f 90       	pop	r0
 20c:	0f be       	out	0x3f, r0	; 63
 20e:	0f 90       	pop	r0
 210:	1f 90       	pop	r1
 212:	18 95       	reti

00000214 <__vector_5>:

ISR(INT4_vect)
{//ladies bathroom door-reed switch
 214:	1f 92       	push	r1
 216:	0f 92       	push	r0
 218:	0f b6       	in	r0, 0x3f	; 63
 21a:	0f 92       	push	r0
 21c:	11 24       	eor	r1, r1
 21e:	8f 93       	push	r24
 220:	9f 93       	push	r25
	if (timer_interrupt == 0)
 222:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <timer_interrupt>
 226:	90 91 06 02 	lds	r25, 0x0206	; 0x800206 <timer_interrupt+0x1>
 22a:	89 2b       	or	r24, r25
 22c:	31 f4       	brne	.+12     	; 0x23a <__vector_5+0x26>
	{
		timer_interrupt=1;
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	90 93 06 02 	sts	0x0206, r25	; 0x800206 <timer_interrupt+0x1>
 236:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <timer_interrupt>
		//start_timer();
	}
}
 23a:	9f 91       	pop	r25
 23c:	8f 91       	pop	r24
 23e:	0f 90       	pop	r0
 240:	0f be       	out	0x3f, r0	; 63
 242:	0f 90       	pop	r0
 244:	1f 90       	pop	r1
 246:	18 95       	reti

00000248 <__vector_6>:
ISR(INT5_vect)
{//ladies shower-water flow sensor
 248:	1f 92       	push	r1
 24a:	0f 92       	push	r0
 24c:	0f b6       	in	r0, 0x3f	; 63
 24e:	0f 92       	push	r0
 250:	11 24       	eor	r1, r1
 252:	8f 93       	push	r24
 254:	9f 93       	push	r25
	if ((ladiesbafu_closed == true) && (waiting_for_ladiesbafu_door_to_open == false))
 256:	80 91 0d 02 	lds	r24, 0x020D	; 0x80020d <ladiesbafu_closed>
 25a:	88 23       	and	r24, r24
 25c:	69 f0       	breq	.+26     	; 0x278 <__vector_6+0x30>
 25e:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <__data_end>
 262:	81 11       	cpse	r24, r1
 264:	09 c0       	rjmp	.+18     	; 0x278 <__vector_6+0x30>
	{
		pulsecount_ladies++;
 266:	80 91 0b 02 	lds	r24, 0x020B	; 0x80020b <pulsecount_ladies>
 26a:	90 91 0c 02 	lds	r25, 0x020C	; 0x80020c <pulsecount_ladies+0x1>
 26e:	01 96       	adiw	r24, 0x01	; 1
 270:	90 93 0c 02 	sts	0x020C, r25	; 0x80020c <pulsecount_ladies+0x1>
 274:	80 93 0b 02 	sts	0x020B, r24	; 0x80020b <pulsecount_ladies>
	}
}
 278:	9f 91       	pop	r25
 27a:	8f 91       	pop	r24
 27c:	0f 90       	pop	r0
 27e:	0f be       	out	0x3f, r0	; 63
 280:	0f 90       	pop	r0
 282:	1f 90       	pop	r1
 284:	18 95       	reti

00000286 <__vector_17>:
// 	//disable timer interrupt
// 	TCCR1B & = ~ (1<<WGM12);
// }

ISR(TIMER1_COMPA_vect)
{
 286:	1f 92       	push	r1
 288:	0f 92       	push	r0
 28a:	0f b6       	in	r0, 0x3f	; 63
 28c:	0f 92       	push	r0
 28e:	11 24       	eor	r1, r1
 290:	8f 93       	push	r24
 292:	9f 93       	push	r25
// 		//ladiesbafu_count++;
// 		waiting_for_ladiesbafu_door_to_open=true;
// 		ladiesbafu_closed=false;
// 	}
// 		TCCR1B &=~(1<<WGM12);
ladiesbafu_count++;
 294:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <ladiesbafu_count>
 298:	90 91 0a 02 	lds	r25, 0x020A	; 0x80020a <ladiesbafu_count+0x1>
 29c:	01 96       	adiw	r24, 0x01	; 1
 29e:	90 93 0a 02 	sts	0x020A, r25	; 0x80020a <ladiesbafu_count+0x1>
 2a2:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <ladiesbafu_count>
}
 2a6:	9f 91       	pop	r25
 2a8:	8f 91       	pop	r24
 2aa:	0f 90       	pop	r0
 2ac:	0f be       	out	0x3f, r0	; 63
 2ae:	0f 90       	pop	r0
 2b0:	1f 90       	pop	r1
 2b2:	18 95       	reti

000002b4 <__itoa_ncheck>:
 2b4:	bb 27       	eor	r27, r27
 2b6:	4a 30       	cpi	r20, 0x0A	; 10
 2b8:	31 f4       	brne	.+12     	; 0x2c6 <__itoa_ncheck+0x12>
 2ba:	99 23       	and	r25, r25
 2bc:	22 f4       	brpl	.+8      	; 0x2c6 <__itoa_ncheck+0x12>
 2be:	bd e2       	ldi	r27, 0x2D	; 45
 2c0:	90 95       	com	r25
 2c2:	81 95       	neg	r24
 2c4:	9f 4f       	sbci	r25, 0xFF	; 255
 2c6:	01 c0       	rjmp	.+2      	; 0x2ca <__utoa_common>

000002c8 <__utoa_ncheck>:
 2c8:	bb 27       	eor	r27, r27

000002ca <__utoa_common>:
 2ca:	fb 01       	movw	r30, r22
 2cc:	55 27       	eor	r21, r21
 2ce:	aa 27       	eor	r26, r26
 2d0:	88 0f       	add	r24, r24
 2d2:	99 1f       	adc	r25, r25
 2d4:	aa 1f       	adc	r26, r26
 2d6:	a4 17       	cp	r26, r20
 2d8:	10 f0       	brcs	.+4      	; 0x2de <__utoa_common+0x14>
 2da:	a4 1b       	sub	r26, r20
 2dc:	83 95       	inc	r24
 2de:	50 51       	subi	r21, 0x10	; 16
 2e0:	b9 f7       	brne	.-18     	; 0x2d0 <__utoa_common+0x6>
 2e2:	a0 5d       	subi	r26, 0xD0	; 208
 2e4:	aa 33       	cpi	r26, 0x3A	; 58
 2e6:	08 f0       	brcs	.+2      	; 0x2ea <__utoa_common+0x20>
 2e8:	a9 5d       	subi	r26, 0xD9	; 217
 2ea:	a1 93       	st	Z+, r26
 2ec:	00 97       	sbiw	r24, 0x00	; 0
 2ee:	79 f7       	brne	.-34     	; 0x2ce <__utoa_common+0x4>
 2f0:	b1 11       	cpse	r27, r1
 2f2:	b1 93       	st	Z+, r27
 2f4:	11 92       	st	Z+, r1
 2f6:	cb 01       	movw	r24, r22
 2f8:	00 c0       	rjmp	.+0      	; 0x2fa <strrev>

000002fa <strrev>:
 2fa:	dc 01       	movw	r26, r24
 2fc:	fc 01       	movw	r30, r24
 2fe:	67 2f       	mov	r22, r23
 300:	71 91       	ld	r23, Z+
 302:	77 23       	and	r23, r23
 304:	e1 f7       	brne	.-8      	; 0x2fe <strrev+0x4>
 306:	32 97       	sbiw	r30, 0x02	; 2
 308:	04 c0       	rjmp	.+8      	; 0x312 <strrev+0x18>
 30a:	7c 91       	ld	r23, X
 30c:	6d 93       	st	X+, r22
 30e:	70 83       	st	Z, r23
 310:	62 91       	ld	r22, -Z
 312:	ae 17       	cp	r26, r30
 314:	bf 07       	cpc	r27, r31
 316:	c8 f3       	brcs	.-14     	; 0x30a <strrev+0x10>
 318:	08 95       	ret

0000031a <_exit>:
 31a:	f8 94       	cli

0000031c <__stop_program>:
 31c:	ff cf       	rjmp	.-2      	; 0x31c <__stop_program>
