
IR_WITH_HEADERS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000004a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000042e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000021e  00800200  00800200  000004a2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004a2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000514  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000120d  00000000  00000000  0000059c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000caa  00000000  00000000  000017a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005d2  00000000  00000000  00002453  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001ac  00000000  00000000  00002a28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000086c  00000000  00000000  00002bd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000314  00000000  00000000  00003440  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00003754  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	56 c1       	rjmp	.+684    	; 0x2b2 <__vector_1>
   6:	00 00       	nop
   8:	6b c1       	rjmp	.+726    	; 0x2e0 <__vector_2>
   a:	00 00       	nop
   c:	80 c1       	rjmp	.+768    	; 0x30e <__vector_3>
   e:	00 00       	nop
  10:	aa c1       	rjmp	.+852    	; 0x366 <__vector_4>
  12:	00 00       	nop
  14:	92 c1       	rjmp	.+804    	; 0x33a <__vector_5>
  16:	00 00       	nop
  18:	d7 c1       	rjmp	.+942    	; 0x3c8 <__vector_6>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	d8 c0       	rjmp	.+432    	; 0x216 <__vector_25>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	e9 c0       	rjmp	.+466    	; 0x264 <__vector_36>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee e2       	ldi	r30, 0x2E	; 46
  fc:	f4 e0       	ldi	r31, 0x04	; 4
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 30       	cpi	r26, 0x00	; 0
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	24 e0       	ldi	r18, 0x04	; 4
 110:	a0 e0       	ldi	r26, 0x00	; 0
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ae 31       	cpi	r26, 0x1E	; 30
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	22 d0       	rcall	.+68     	; 0x164 <main>
 120:	84 c1       	rjmp	.+776    	; 0x42a <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <_Z11UART0_BEGINv>:
{
	for (position1=0;position1<256;position1++)
	{
		buffer1[position1]=0x00;
	}
	position1=0;
 124:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
 128:	87 e6       	ldi	r24, 0x67	; 103
 12a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
 12e:	e1 ec       	ldi	r30, 0xC1	; 193
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 81       	ld	r24, Z
 134:	88 69       	ori	r24, 0x98	; 152
 136:	80 83       	st	Z, r24
 138:	e2 ec       	ldi	r30, 0xC2	; 194
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	80 81       	ld	r24, Z
 13e:	86 60       	ori	r24, 0x06	; 6
 140:	80 83       	st	Z, r24
 142:	08 95       	ret

00000144 <_Z11UART1_BEGINv>:
 144:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7c00cd>
 148:	87 e6       	ldi	r24, 0x67	; 103
 14a:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7c00cc>
 14e:	e9 ec       	ldi	r30, 0xC9	; 201
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	80 81       	ld	r24, Z
 154:	88 69       	ori	r24, 0x98	; 152
 156:	80 83       	st	Z, r24
 158:	ea ec       	ldi	r30, 0xCA	; 202
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	86 60       	ori	r24, 0x06	; 6
 160:	80 83       	st	Z, r24
 162:	08 95       	ret

00000164 <main>:
}


int main(void)
{
	UART0_BEGIN();
 164:	df df       	rcall	.-66     	; 0x124 <_Z11UART0_BEGINv>
	UART1_BEGIN();
 166:	ee df       	rcall	.-36     	; 0x144 <_Z11UART1_BEGINv>
 168:	8d b3       	in	r24, 0x1d	; 29
	EIMSK|=(1<<INT0);//external interrupt request 0 enable
 16a:	81 60       	ori	r24, 0x01	; 1
 16c:	8d bb       	out	0x1d, r24	; 29
 16e:	e9 e6       	ldi	r30, 0x69	; 105
	EICRA|=(1<<ISC01)|(0<<ISC00);//trigger INTO 0n falling edge. Interrupt 0 sense control
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	80 81       	ld	r24, Z
 174:	82 60       	ori	r24, 0x02	; 2
 176:	80 83       	st	Z, r24
 178:	78 94       	sei
	sei();
 17a:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <i+0x1>
	while (1)
	{
		for(i=0; i<60; i++)
 17e:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <i>
 182:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <i>
 186:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <i+0x1>
 18a:	cc 97       	sbiw	r24, 0x3c	; 60
 18c:	9c f4       	brge	.+38     	; 0x1b4 <main+0x50>
 18e:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 190:	83 ed       	ldi	r24, 0xD3	; 211
 192:	90 e3       	ldi	r25, 0x30	; 48
 194:	21 50       	subi	r18, 0x01	; 1
 196:	80 40       	sbci	r24, 0x00	; 0
 198:	90 40       	sbci	r25, 0x00	; 0
 19a:	e1 f7       	brne	.-8      	; 0x194 <main+0x30>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <main+0x3a>
 19e:	00 00       	nop
 1a0:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <i>
 1a4:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <i+0x1>
 1a8:	01 96       	adiw	r24, 0x01	; 1
 1aa:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <i+0x1>
 1ae:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <i>
 1b2:	e7 cf       	rjmp	.-50     	; 0x182 <main+0x1e>
 1b4:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <ladiescount>
		{
			_delay_ms(1000);
		}
		num_ladies=ladiescount;
 1b8:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <ladiescount+0x1>
 1bc:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <num_ladies+0x1>
 1c0:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <num_ladies>
 1c4:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <ladiescount+0x1>
		ladiescount=0;
 1c8:	10 92 0c 02 	sts	0x020C, r1	; 0x80020c <ladiescount>
 1cc:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <gentscount>
		num_gents=gentscount;
 1d0:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <gentscount+0x1>
 1d4:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <num_gents+0x1>
 1d8:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <num_gents>
 1dc:	10 92 0b 02 	sts	0x020B, r1	; 0x80020b <gentscount+0x1>
		gentscount=0;
 1e0:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <gentscount>
 1e4:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <gentsbafu_count>
		num_gentsbafu=gentsbafu_count;
 1e8:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <gentsbafu_count+0x1>
 1ec:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <num_gentsbafu+0x1>
 1f0:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <num_gentsbafu>
 1f4:	10 92 13 02 	sts	0x0213, r1	; 0x800213 <gentsbafu_count+0x1>
		gentsbafu_count=0;
 1f8:	10 92 12 02 	sts	0x0212, r1	; 0x800212 <gentsbafu_count>
 1fc:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <ladiesbafu_count>
		num_ladiesbafu=ladiesbafu_count;
 200:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <ladiesbafu_count+0x1>
 204:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 208:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
 20c:	10 92 11 02 	sts	0x0211, r1	; 0x800211 <ladiesbafu_count+0x1>
		ladiesbafu_count=0;
 210:	10 92 10 02 	sts	0x0210, r1	; 0x800210 <ladiesbafu_count>
 214:	b2 cf       	rjmp	.-156    	; 0x17a <main+0x16>

00000216 <__vector_25>:
 216:	1f 92       	push	r1
		}

	}
}
ISR(USART0_RX_vect)
{
 218:	0f 92       	push	r0
 21a:	0f b6       	in	r0, 0x3f	; 63
 21c:	0f 92       	push	r0
 21e:	11 24       	eor	r1, r1
 220:	0b b6       	in	r0, 0x3b	; 59
 222:	0f 92       	push	r0
 224:	2f 93       	push	r18
 226:	8f 93       	push	r24
 228:	9f 93       	push	r25
 22a:	ef 93       	push	r30
 22c:	ff 93       	push	r31
	
	buffer0[position0]=UDR0;
 22e:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <position0>
 232:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <position0+0x1>
 236:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 23a:	fc 01       	movw	r30, r24
 23c:	e2 5e       	subi	r30, 0xE2	; 226
 23e:	fc 4f       	sbci	r31, 0xFC	; 252
 240:	20 83       	st	Z, r18
	position0++;
 242:	01 96       	adiw	r24, 0x01	; 1
 244:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <position0+0x1>
 248:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <position0>
}
 24c:	ff 91       	pop	r31
 24e:	ef 91       	pop	r30
 250:	9f 91       	pop	r25
 252:	8f 91       	pop	r24
 254:	2f 91       	pop	r18
 256:	0f 90       	pop	r0
 258:	0b be       	out	0x3b, r0	; 59
 25a:	0f 90       	pop	r0
 25c:	0f be       	out	0x3f, r0	; 63
 25e:	0f 90       	pop	r0
 260:	1f 90       	pop	r1
 262:	18 95       	reti

00000264 <__vector_36>:

ISR(USART1_RX_vect)
{
 264:	1f 92       	push	r1
 266:	0f 92       	push	r0
 268:	0f b6       	in	r0, 0x3f	; 63
 26a:	0f 92       	push	r0
 26c:	11 24       	eor	r1, r1
 26e:	0b b6       	in	r0, 0x3b	; 59
 270:	0f 92       	push	r0
 272:	2f 93       	push	r18
 274:	8f 93       	push	r24
 276:	9f 93       	push	r25
 278:	ef 93       	push	r30
 27a:	ff 93       	push	r31
	
	buffer1[position1]=UDR1;
 27c:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <position1>
 280:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <position1+0x1>
 284:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
 288:	fc 01       	movw	r30, r24
 28a:	e2 5e       	subi	r30, 0xE2	; 226
 28c:	fd 4f       	sbci	r31, 0xFD	; 253
 28e:	20 83       	st	Z, r18
	position1++;
 290:	01 96       	adiw	r24, 0x01	; 1
 292:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <position1+0x1>
 296:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <position1>
}
 29a:	ff 91       	pop	r31
 29c:	ef 91       	pop	r30
 29e:	9f 91       	pop	r25
 2a0:	8f 91       	pop	r24
 2a2:	2f 91       	pop	r18
 2a4:	0f 90       	pop	r0
 2a6:	0b be       	out	0x3b, r0	; 59
 2a8:	0f 90       	pop	r0
 2aa:	0f be       	out	0x3f, r0	; 63
 2ac:	0f 90       	pop	r0
 2ae:	1f 90       	pop	r1
 2b0:	18 95       	reti

000002b2 <__vector_1>:
ISR(INT0_vect)
{
 2b2:	1f 92       	push	r1
 2b4:	0f 92       	push	r0
 2b6:	0f b6       	in	r0, 0x3f	; 63
 2b8:	0f 92       	push	r0
 2ba:	11 24       	eor	r1, r1
 2bc:	8f 93       	push	r24
 2be:	9f 93       	push	r25
	ladiescount++;
 2c0:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <ladiescount>
 2c4:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <ladiescount+0x1>
 2c8:	01 96       	adiw	r24, 0x01	; 1
 2ca:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <ladiescount+0x1>
 2ce:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <ladiescount>
}
 2d2:	9f 91       	pop	r25
 2d4:	8f 91       	pop	r24
 2d6:	0f 90       	pop	r0
 2d8:	0f be       	out	0x3f, r0	; 63
 2da:	0f 90       	pop	r0
 2dc:	1f 90       	pop	r1
 2de:	18 95       	reti

000002e0 <__vector_2>:
ISR(INT1_vect)
{
 2e0:	1f 92       	push	r1
 2e2:	0f 92       	push	r0
 2e4:	0f b6       	in	r0, 0x3f	; 63
 2e6:	0f 92       	push	r0
 2e8:	11 24       	eor	r1, r1
 2ea:	8f 93       	push	r24
 2ec:	9f 93       	push	r25
	gentscount++;
 2ee:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <gentscount>
 2f2:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <gentscount+0x1>
 2f6:	01 96       	adiw	r24, 0x01	; 1
 2f8:	90 93 0b 02 	sts	0x020B, r25	; 0x80020b <gentscount+0x1>
 2fc:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <gentscount>
}
 300:	9f 91       	pop	r25
 302:	8f 91       	pop	r24
 304:	0f 90       	pop	r0
 306:	0f be       	out	0x3f, r0	; 63
 308:	0f 90       	pop	r0
 30a:	1f 90       	pop	r1
 30c:	18 95       	reti

0000030e <__vector_3>:


ISR(INT2_vect)
{
 30e:	1f 92       	push	r1
 310:	0f 92       	push	r0
 312:	0f b6       	in	r0, 0x3f	; 63
 314:	0f 92       	push	r0
 316:	11 24       	eor	r1, r1
 318:	8f 93       	push	r24
	if(gentsbafu_closed == false)
 31a:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <gentsbafu_closed>
 31e:	81 11       	cpse	r24, r1
 320:	04 c0       	rjmp	.+8      	; 0x32a <__vector_3+0x1c>
	{
		gentsbafu_closed=true;
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	80 93 0f 02 	sts	0x020F, r24	; 0x80020f <gentsbafu_closed>
 328:	02 c0       	rjmp	.+4      	; 0x32e <__vector_3+0x20>
	}
	else
	{
		gentsbafu_closed=false;
 32a:	10 92 0f 02 	sts	0x020F, r1	; 0x80020f <gentsbafu_closed>
	}
}
 32e:	8f 91       	pop	r24
 330:	0f 90       	pop	r0
 332:	0f be       	out	0x3f, r0	; 63
 334:	0f 90       	pop	r0
 336:	1f 90       	pop	r1
 338:	18 95       	reti

0000033a <__vector_5>:
ISR(INT4_vect)
{
 33a:	1f 92       	push	r1
 33c:	0f 92       	push	r0
 33e:	0f b6       	in	r0, 0x3f	; 63
 340:	0f 92       	push	r0
 342:	11 24       	eor	r1, r1
 344:	8f 93       	push	r24
	if(ladiesbafu_closed == false)
 346:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <ladiesbafu_closed>
 34a:	81 11       	cpse	r24, r1
 34c:	04 c0       	rjmp	.+8      	; 0x356 <__vector_5+0x1c>
	{
		ladiesbafu_closed=true;
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <ladiesbafu_closed>
 354:	02 c0       	rjmp	.+4      	; 0x35a <__vector_5+0x20>
	}
	else
	{
		ladiesbafu_closed=false;
 356:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <ladiesbafu_closed>
	}
}
 35a:	8f 91       	pop	r24
 35c:	0f 90       	pop	r0
 35e:	0f be       	out	0x3f, r0	; 63
 360:	0f 90       	pop	r0
 362:	1f 90       	pop	r1
 364:	18 95       	reti

00000366 <__vector_4>:
ISR(INT3_vect)
{
 366:	1f 92       	push	r1
 368:	0f 92       	push	r0
 36a:	0f b6       	in	r0, 0x3f	; 63
 36c:	0f 92       	push	r0
 36e:	11 24       	eor	r1, r1
 370:	8f 93       	push	r24
 372:	9f 93       	push	r25
	pulsecount_gents++;
 374:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <pulsecount_gents>
 378:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <pulsecount_gents+0x1>
 37c:	01 96       	adiw	r24, 0x01	; 1
 37e:	90 93 17 02 	sts	0x0217, r25	; 0x800217 <pulsecount_gents+0x1>
 382:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <pulsecount_gents>
	if((pulsecount_gents >= 20) && (gentsbafu_closed == true) && (saved_gents_count == false))
 386:	44 97       	sbiw	r24, 0x14	; 20
 388:	54 f0       	brlt	.+20     	; 0x39e <__vector_4+0x38>
 38a:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <gentsbafu_closed>
 38e:	88 23       	and	r24, r24
 390:	41 f0       	breq	.+16     	; 0x3a2 <__vector_4+0x3c>
 392:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <saved_gents_count>
 396:	99 23       	and	r25, r25
 398:	29 f0       	breq	.+10     	; 0x3a4 <__vector_4+0x3e>
 39a:	80 e0       	ldi	r24, 0x00	; 0
 39c:	03 c0       	rjmp	.+6      	; 0x3a4 <__vector_4+0x3e>
 39e:	80 e0       	ldi	r24, 0x00	; 0
 3a0:	01 c0       	rjmp	.+2      	; 0x3a4 <__vector_4+0x3e>
 3a2:	80 e0       	ldi	r24, 0x00	; 0
 3a4:	88 23       	and	r24, r24
 3a6:	49 f0       	breq	.+18     	; 0x3ba <__vector_4+0x54>
	{
		gentsbafu_count++;
 3a8:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <gentsbafu_count>
 3ac:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <gentsbafu_count+0x1>
 3b0:	01 96       	adiw	r24, 0x01	; 1
 3b2:	90 93 13 02 	sts	0x0213, r25	; 0x800213 <gentsbafu_count+0x1>
 3b6:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <gentsbafu_count>
	}
}
 3ba:	9f 91       	pop	r25
 3bc:	8f 91       	pop	r24
 3be:	0f 90       	pop	r0
 3c0:	0f be       	out	0x3f, r0	; 63
 3c2:	0f 90       	pop	r0
 3c4:	1f 90       	pop	r1
 3c6:	18 95       	reti

000003c8 <__vector_6>:

ISR(INT5_vect)
{
 3c8:	1f 92       	push	r1
 3ca:	0f 92       	push	r0
 3cc:	0f b6       	in	r0, 0x3f	; 63
 3ce:	0f 92       	push	r0
 3d0:	11 24       	eor	r1, r1
 3d2:	8f 93       	push	r24
 3d4:	9f 93       	push	r25
	pulsecount_ladies++;
 3d6:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <pulsecount_ladies>
 3da:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <pulsecount_ladies+0x1>
 3de:	01 96       	adiw	r24, 0x01	; 1
 3e0:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <pulsecount_ladies+0x1>
 3e4:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <pulsecount_ladies>
	if((pulsecount_ladies >= 20) && (ladiesbafu_closed == true) && (saved_ladies_count == false))
 3e8:	44 97       	sbiw	r24, 0x14	; 20
 3ea:	54 f0       	brlt	.+20     	; 0x400 <__LOCK_REGION_LENGTH__>
 3ec:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <ladiesbafu_closed>
 3f0:	88 23       	and	r24, r24
 3f2:	41 f0       	breq	.+16     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3f4:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <saved_ladies_count>
 3f8:	99 23       	and	r25, r25
 3fa:	29 f0       	breq	.+10     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3fc:	80 e0       	ldi	r24, 0x00	; 0
 3fe:	03 c0       	rjmp	.+6      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 400:	80 e0       	ldi	r24, 0x00	; 0
 402:	01 c0       	rjmp	.+2      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 404:	80 e0       	ldi	r24, 0x00	; 0
 406:	88 23       	and	r24, r24
 408:	49 f0       	breq	.+18     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
	{
		ladiesbafu_count++;
 40a:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <ladiesbafu_count>
 40e:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <ladiesbafu_count+0x1>
 412:	01 96       	adiw	r24, 0x01	; 1
 414:	90 93 11 02 	sts	0x0211, r25	; 0x800211 <ladiesbafu_count+0x1>
 418:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <ladiesbafu_count>
	}
}
 41c:	9f 91       	pop	r25
 41e:	8f 91       	pop	r24
 420:	0f 90       	pop	r0
 422:	0f be       	out	0x3f, r0	; 63
 424:	0f 90       	pop	r0
 426:	1f 90       	pop	r1
 428:	18 95       	reti

0000042a <_exit>:
 42a:	f8 94       	cli

0000042c <__stop_program>:
 42c:	ff cf       	rjmp	.-2      	; 0x42c <__stop_program>
